#1
char Aclass(3,32)
Adymosim
1.4
Final state generated by Dymosim


#    Experiment parameters
double experiment(7,1)
  3.1536000000000000E+07   # StartTime    Time at which integration starts
                           #              (and linearization and trimming time)
  6.3072000000000000E+07   # StopTime     Time at which integration stops
     900                   # Increment    Communication step size, if > 0
       0                   # nInterval    Number of communication intervals, if > 0
  1.0000000000000000E-04   # Tolerance    Relative precision of signals for
                           #              simulation, linearization and trimming
       0                   # MaxFixedStep Maximum step size of fixed step size
                           #              integrators, if > 0.0
       8                   # Algorithm    Integration algorithm as integer (1...28)
                           #
                           #             | model|       |        | dense | state |
                           # Algorithm   | typ  | stiff | order  | output| event |
                           # ------------+------+-------+--------+-------+-------+
                           #  1 | deabm  |  ode |   no  |  1-12  |  yes  |   no  |
                           #  2 | lsode1 |  ode |   no  |  1-12  |  yes  |   no  |
                           #  3 | lsode2 |  ode |  yes  |  1-5   |  yes  |   no  |
                           #  4 | lsodar |  ode |  both |1-12,1-5|  yes  |  yes  |
                           #  5 | dopri5 |  ode |   no  |   5    |   no  |   no  |
                           #  6 | dopri8 |  ode |   no  |   8    |   no  |   no  |
                           #  7 | grk4t  |  ode |  yes  |   4    |   no  |   no  |
                           #  8 | dassl  |  dae |  yes  |  1-5   |  yes  |  yes  |
                           #  9 | odassl | hdae |  yes  |  1-5   |  yes  |  yes  |
                           # 10 | mexx   | hdae |   no  |  2-24  |   no  |   no  |
                           # 11 | euler  |  ode |   no  |   1    |   no  |  yes  |
                           # 12 | rkfix2 |  ode |   no  |   2    |   no  |  yes  |
                           # 13 | rkfix3 |  ode |   no  |   3    |   no  |  yes  |
                           # 14 | rkfix4 |  ode |   no  |   4    |   no  |  yes  |
                           #>=14| others |  ode |yes/no |  2-5   |   yes |  yes  |
                           # ---+--------+------+-------+--------+-------+-------+
                           # euler and rkfix have fixed stepsize.


#    Method tuning parameters
double method(27,1)
       1                   # grid     type of communication time grid, defined by
                           #          = 1: equidistant points ("Increment/nInterval")
                           #          = 2: vector of grid points ("tgrid")
                           #          = 3: variable step integrator (automatically)
                           #          = 4: model (call of "increment" in Dymola, e.g.
                           #                      incr=Time > 2 then 0 else 0.1
                           #                      dummy=increment(incr))
                           #          grid = 1,3 is stopped by "StopTime"
                           #          grid = 2   is stopped by "tgrid(last)"
                           #          grid = 4   runs forever (stopped by model)
       1                   # nt       Use every NT time instant, if grid = 3
       3                   # dense    1/2/3 restart/step/interpolate GRID points
       1                   # evgrid   0/1 do not/save event points in comm. time grid
       1                   # evu      0/1 U-discontinuity does not/trigger events
       0                   # evuord       U-discontinuity order to consider (0,1,...)
       0                   # error    0/1/2 One message/warning/error messages
       0                   # jac      0/1 Compute jacobian numerically/by BLOCKJ
       0                   # xd0c     0/1 Compute/set XD0
       0                   # f3       0/1 Ignore/use F3 of HDAE (= index 1)
       0                   # f4       0/1 Ignore/use F4 of HDAE (= index 2)
       0                   # f5       0/1 Ignore/use F5 of HDAE (= invar.)
       0                   # debug    flags for debug information (1<<0 uses pdebug) 
     100                   # pdebug       priority of debug information (1...100)
       0                   # fmax     Maximum number of evaluations of BLOCKF, if > 0
       0                   # ordmax   Maximum allowed integration order, if > 0
       0                   # hmax     Maximum absolute stepsize, if > 0
       0                   # hmin     Minimum absolute stepsize, if > 0 (use with care!)
       0                   # h0       Stepsize to be attempted on first step, if > 0
  2.0000000000000000E-14   # teps     Bound to check, if 2 equal time instants
  1.0000000000000000E-10   # eveps    Hysteresis epsilon at event points
      20                   # eviter   Maximum number of event iterations
  9.9999999999999995E-07   # delaym   Minimum time increment in delay buffers
       1                   # fexcep   0/1 floating exception crashes/stops dymosim
       1                   # tscale   clock-time = tscale*simulation-time, if grid = 5
                           #          > 1: simulation too slow
                           #          = 1: simulation-time = real-time
                           #          < 1: simulation too fast
       1                   # shared   (not used)
    2473                   # memkey   (not used)


#    Output parameters
int settings(13,1)
 0                         # lprec    0/1 do not/store result data in double
 1                         # lx       0/1 do not/store x  (state variables)
 1                         # lxd      0/1 do not/store xd (derivative of states)
 1                         # lu       0/1 do not/store u  (input     signals)
 1                         # ly       0/1 do not/store y  (output    signals)
 0                         # lz       0/1 do not/store z  (indicator signals)
 1                         # lw       0/1 do not/store w  (auxiliary signals)
 1                         # la       0/1 do not/store a  (alias     signals)
 0                         # lperf    0/1 do not/store performance indicators
 0                         # levent   0/1 do not/store event point
 1                         # lres     0/1 do not/store results on result file
 0                         # lshare   0/1 do not/store info data for shared memory on dsshare.txt
 1                         # lform    0/1 ASCII/Matlab-binary storage format of results
                           #              (for simulation/linearization; not for trimming)


#    Names of initial variables
char initialName(71,29)
verbraucher.O2.m_flow
verbraucher.H2.m_flow
verbraucher.M_H2
verbraucher.n_O2
verbraucher.M_O2
verbraucher.n
verbraucher.der(n)
elektrolyseur.H2O.m_flow
elektrolyseur.H2O.p
elektrolyseur.Power
elektrolyseur.A
elektrolyseur.n
elektrolyseur.i_min
elektrolyseur.alpha_pem
elektrolyseur.i_0_pem
elektrolyseur.i_max_pem
elektrolyseur.delta_pem
elektrolyseur.sigma_pem
elektrolyseur.lambda
elektrolyseur.t_min_pem
elektrolyseur.alpha_alk
elektrolyseur.i_0_alk
elektrolyseur.i_max_alk
elektrolyseur.m
elektrolyseur.sigma_alk
elektrolyseur.t_min_alk
elektrolyseur.alpha_so
elektrolyseur.i_0_so
elektrolyseur.i_max_so
elektrolyseur.sigma_so
elektrolyseur.t_min_so
elektrolyseur.n_H2
elektrolyseur.M_H2
elektrolyseur.p_H2
elektrolyseur.cp_H2
elektrolyseur.n_O2
elektrolyseur.M_O2
elektrolyseur.p_O2
elektrolyseur.cp_O2
elektrolyseur.M_H2O
elektrolyseur.p_H2O
elektrolyseur.a_H2O
elektrolyseur.G_r_0
elektrolyseur.H_r_0
elektrolyseur.z
elektrolyseur.T_0
elektrolyseur.p_0
elektrolyseur.T
elektrolyseur.T_u
elektrolyseur.U_zell
elektrolyseur.U_th_0
elektrolyseur.U_rev_0
elektrolyseur.U_rev
elektrolyseur.U_akt
elektrolyseur.U_ohm
elektrolyseur.I
elektrolyseur.i
elektrolyseur.eff
versorgung.H2O.p
versorgung.P_Eingang
versorgung.heatPort.Q_flow
versorgung.Energiebilanz
versorgung.der(Energiebilanz)
versorgung.Nutzenergie
versorgung.der(Nutzenergie)
versorgung.Netzbezug
versorgung.der(Netzbezug)
versorgung.Einspeisung
versorgung.der(Einspeisung)
versorgung.Q
versorgung.der(Q)

double initialValue(71,6)
 -2       0                  0       0                  6  388   # verbraucher.O2.m_flow
 -2       0                  0       0                  6  388   # verbraucher.H2.m_flow
 -2  2.0200000000000000E+00  0 1.0000000000000000E+100  6  256   # verbraucher.M_H2
 -2       0                  0       0                  6  256   # verbraucher.n_O2
 -2      16                  0 1.0000000000000000E+100  6  256   # verbraucher.M_O2
 -2 -7.0734090069266502E+05  0 1.0000000000000000E+100  2  280   # verbraucher.n
 -2       0                  0       0                  3  256   # verbraucher.der(n)
 -2       0                  0       0                  6  388   # elektrolyseur.H2O.m_flow
 -2  1.0310500000000000E+05  0 1.0000000000000000E+100  6  260   # elektrolyseur.H2O.p
 -2       0                  0       0                  6  256   # elektrolyseur.Power
 -1      10                  0       0                  1  280   # elektrolyseur.A
 -1      60                  0       0                  1  280   # elektrolyseur.n
 -2    1000                  0       0                  6  256   # elektrolyseur.i_min
 -1  7.3529999999999995E-01  0       0                  1  280   # elektrolyseur.alpha_pem
 -2  1.0800000000000001E-04  0       0                  6  256   # elektrolyseur.i_0_pem
 -1   20000                  0       0                  1  280   # elektrolyseur.i_max_pem
 -1  1.4999999999999999E-04  0       0                  1  280   # elektrolyseur.delta_pem
 -2  1.9892314285743801E-01  0       0                  6  256   # elektrolyseur.sigma_pem
 -1      22                  0       0                  1  280   # elektrolyseur.lambda
 -2  1.0000000000000001E-01  0       0                  6  256   # elektrolyseur.t_min_pem
 -1  1.7500000000000000E+00  0       0                  1  280   # elektrolyseur.alpha_alk
 -2  1.0000000000000000E-10  0       0                  6  256   # elektrolyseur.i_0_alk
 -1    5000                  0       0                  1  280   # elektrolyseur.i_max_alk
 -1  2.0000000000000001E-01  0       0                  1  280   # elektrolyseur.m
 -2  8.4342829786293316E-02  0       0                  6  256   # elektrolyseur.sigma_alk
 -2  2.0000000000000001E-01  0       0                  6  256   # elektrolyseur.t_min_alk
 -1  1.7500000000000000E+00  0       0                  1  280   # elektrolyseur.alpha_so
 -2       1                  0       0                  6  256   # elektrolyseur.i_0_so
 -1   10000                  0       0                  1  280   # elektrolyseur.i_max_so
 -2  7.1958198280365954E-09  0       0                  6  256   # elektrolyseur.sigma_so
 -2  2.9999999999999999E-01  0       0                  6  256   # elektrolyseur.t_min_so
 -2       0                  0       0                  6  256   # elektrolyseur.n_H2
 -2  2.0200000000000000E+00  0 1.0000000000000000E+100  6  256   # elektrolyseur.M_H2
 -1  4.0000000000000000E+05  0 1.0000000000000000E+100  1  280   # elektrolyseur.p_H2
 -2  2.8899999999999999E+01  0       0                  6  256   # elektrolyseur.cp_H2
 -2       0                  0       0                  6  256   # elektrolyseur.n_O2
 -2      16                  0 1.0000000000000000E+100  6  256   # elektrolyseur.M_O2
 -1  4.0000000000000000E+05  0 1.0000000000000000E+100  1  280   # elektrolyseur.p_O2
 -2  2.9800000000000001E+01  0       0                  6  256   # elektrolyseur.cp_O2
 -2  1.8020000000000000E+01  0 1.0000000000000000E+100  6  256   # elektrolyseur.M_H2O
 -2  1.0310500000000000E+05  0       0                  6  256   # elektrolyseur.p_H2O
 -2       1                  0       0                  6  256   # elektrolyseur.a_H2O
 -2  2.3648300000000000E+05  0       0                  6  256   # elektrolyseur.G_r_0
 -2  2.8583000000000000E+05  0       0                  6  256   # elektrolyseur.H_r_0
 -2       2                  0       0                  6  256   # elektrolyseur.z
 -2  2.9814999999999998E+02  0 1.0000000000000000E+100  6  256   # elektrolyseur.T_0
 -2  1.0310500000000000E+05  0       0                  6  256   # elektrolyseur.p_0
 -2  3.5314999999999998E+02  0 1.0000000000000000E+100  6  256   # elektrolyseur.T
 -1  2.9314999999999998E+02  0 1.0000000000000000E+100  1  280   # elektrolyseur.T_u
 -2  1.2095522819261673E+00  0       0                  6  256   # elektrolyseur.U_zell
 -2  1.4812095979247086E+00  0       0                  6  256   # elektrolyseur.U_th_0
 -2  1.2254867905609239E+00  0       0                  6  256   # elektrolyseur.U_rev_0
 -2  1.2095522819261673E+00  0       0                  6  256   # elektrolyseur.U_rev
 -2       0                  0       0                  6  256   # elektrolyseur.U_akt
 -2       0                  0       0                  6  256   # elektrolyseur.U_ohm
 -2       0                  0       0                  6  256   # elektrolyseur.I
 -2       0                  0       0                  6  256   # elektrolyseur.i
 -2       0                  0 1.0000000000000000E+100  6  256   # elektrolyseur.eff
 -2  1.0310500000000000E+05  0 1.0000000000000000E+100  6  260   # versorgung.H2O.p
 -2       0                  0       0                  6  256   # versorgung.P_Eingang
 -2       0                  0       0                  6  388   # versorgung.heatPort.Q_flow
 -2 -3.6455974337817695E+12  0       0                  2  280   # versorgung.Energiebilanz
 -2  -88048                  0       0                  3  256   # versorgung.der(Energiebilanz)
 -2  3.1528374967654360E+12  0       0                  2  280   # versorgung.Nutzenergie
 -2   88048                  0       0                  3  256   # versorgung.der(Nutzenergie)
 -2 -3.6455974337817695E+12  0       0                  2  280   # versorgung.Netzbezug
 -2  -88048                  0       0                  3  256   # versorgung.der(Netzbezug)
 -2       0                  0       0                  2  280   # versorgung.Einspeisung
 -2       0                  0       0                  3  256   # versorgung.der(Einspeisung)
 -2       0                  0       0                  2  280   # versorgung.Q
 -2       0                  0       0                  3  256   # versorgung.der(Q)


# Matrix with 6 columns defining the initial value calculation
# (columns 5 and 6 are not utilized for the calculation but are
#  reported by dymosim via dymosim -i for user convenience):
#
# column 1: Type of initial value
#           = -2: special case: for continuing simulation (column 2 = value)
#           = -1: fixed value (column 2 = fixed value)
#           =  0: free value, i.e., no restriction (column 2 = initial value)
#           >  0: desired value (column 1 = weight for optimization
#                                column 2 = desired value)
#                 use weight=1, since automatic scaling usually
#                 leads to equally weighted terms
# column 2: fixed, free or desired value according to column 1.
# column 3: Minimum value (ignored, if Minimum >= Maximum).
# column 4: Maximum value (ignored, if Minimum >= Maximum).
#           Minimum and maximum restrict the search range in initial
#           value calculation. They might also be used for scaling.
# column 5: Category of variable.
#           = 1: parameter.
#           = 2: state.
#           = 3: state derivative.
#           = 4: output.
#           = 5: input.
#           = 6: auxiliary variable.
# column 6: Data type of variable and flags according to dsBaseType
#  <value>&3= 0: real.
#  <value>&3= 1: boolean.
#  <value>&3= 2: integer.
#
# Initial values are calculated according to the following procedure:
#
# - If parameters, states and inputs are FIXED, and other variables
#   are FREE, no special action takes place (default setting).
#
# - If there are only FIXED and FREE variables and the number of
#   FREE parameters, states and inputs is IDENTICAL to the number of
#   FIXED state derivatives, outputs and auxiliary variables, a non-linear
#   equation is solved to determine a consistent set of initial conditions.
#
# - In all other cases the following optimization problem is solved:
#      min( sum( weight(i)*( (value(i) - DESIRED(i))/scale(i) )^2 ) )
#   under the constraint that the differential equation is fulfilled
#   at the initial time. In most cases weight(i)=1 is sufficient, due
#   to the automatic scaling (if DESIRED(i) is not close to zero,
#   scale(i) = DESIRED(i). Otherwise, the scaling is based on the
#   nominal value (and maybe minimum and maximum values given in 
#   column 3 and 4). If these values are zero, scale(i)=1 is used).
#
char initialDescription(71,81)
mass flow rate of sub-component [kg/s]
mass flow rate of sub-component [kg/s]
[kg/mol]
[mol/s]
[kg/mol]
[mol]
[mol/s]
mass flow rate of sub-component [kg/s]
partial pressure of sub-component [Pa|bar]
Input/Output power for the elektrolyser [W]
aktive Zellfläche [m2]
Anzahl der in parallelgeschalteten Zellen [m2]
[A/m2]

[A/m2]
maximal stromdichte [A/m2]
membran thickness [m]
conductivity of membran [S/m]
water content of membran (dry: ~0.5; water saturated gas: ~13; liquid water: ~22)
minimale Teillast [1]

[A/m2]
maximal stromdichte [A/m2]
molar Concentration of the electrolyt-solution
conductivity of elektrolyte [S/m]
minimale Teillast [1]

[A/m2]
maximal stromdichte [A/m2]
conductivity of elektrolyte [S/m]
minimale Teillast [1]
[mol/s]
[kg/mol]
partial pressure H2 [Pa|bar]
[J/(kg.K)]
[mol/s]
[kg/mol]
partial pressure O2 [Pa|bar]
[J/(kg.K)]
[kg/mol]
partial pressure H2O [Pa|bar]
water activity (equals 1 for liquid water) [1]
free gibbs reaktion energy at T=298,15K and P=1atm [J/mol]
reaktion enthalpy at T=298,15K and P=1atm [J/mol]
nuber of exchanged elektrons per elementary reaktion
standard temperature [K|degC]
standard pressure [Pa|bar]
process temperature [K|degC]
Umgebungstemperatur [K|degC]
needed Cell-Voltage [V]
thermo-neutral Cell-Voltage at T=298,15K and P=1atm [V]
reversible Cell-Voltage at T=298,15K and P=1atm [V]
reversible Cell-Voltage [V]
activation overpotetial [V]
ohmic resistance [V]
[A]
[A/m2]
[1]
partial pressure of sub-component [Pa|bar]
Input/Output power for the elektrolyser [W]
Heat flow rate (positive if flowing from outside into the component) [W]
[J]
[W]
[J]
[W]
[J]
[W]
[J]
[W]
[J]
[W]

